{"parent.filenames"          ["bract/ring/context.edn"
                              "gossamer/core/context.edn"]
 :bract.cli/config-required? true                ; require config for the application
 :bract.core/inducers        [(bract.core.inducer/run-context-inducers :app/pre-inducers)
                              (bract.core.inducer/run-context-inducers :app/cli-inducers)
                              (bract.core.inducer/run-context-inducers :app/log-inducers)
                              (bract.core.inducer/run-context-inducers :app/init-inducers)
                              (bract.core.inducer/run-context-inducers :app/route-inducers)
                              (bract.ring.inducer/apply-wrappers       $:bract.ring/wrappers) ; Ring wrappers from bract.ring
                              (bract.core.inducer/run-context-inducers :app/dev-inducers)
                              (bract.core.inducer/run-context-inducers :app/runtime-manage)]
 :app/pre-inducers           [(bract.cli.inducer/merge-commands $:app/cli-commands)]
 :app/cli-commands           {"version" {:doc     "Print application version"
                                         :handler gossamer.core.util/command-print-version}}
 :app/cli-inducers           [bract.cli.inducer/parse-args
                              (bract.core.inducer/run-context-inducers
                                :app/cfg-inducers)
                              bract.core.inducer/set-verbosity
                              bract.cli.inducer/execute-command]
 :app/cfg-inducers           [bract.core.inducer/discover-hostname
                              bract.core.inducer/discover-project-edn-version
                              bract.core.inducer/read-config]
 :app/log-inducers           [bract.core.inducer/export-as-sysprops
                              gossamer.core.inducer/log-mdc-codec-init]
 :app/init-inducers          [(gossamer.core.inducer/abort
                                "You must specify key :app/init-inducers (vector) in bract-context.edn")]
 :app/route-inducers         [gossamer.core.inducer/apply-route-wrappers
                              gossamer.core.inducer/calfpath-routes->ring-handler
                              (bract.ring.inducer/apply-wrappers $:app/ring-wrappers)
                              (bract.ring.inducer/apply-middlewares $:app/ring-middleware)]
 :app/ring-wrappers          []  ; override this to specify Ring wrappers to apply
 :app/ring-middleware        []  ; override this to specify Ring middleware to apply
 :app/dev-inducers           []
 :app/runtime-manage         [(bract.core.inducer/set-default-exception-handler
                                gossamer.core.util/handle-uncaught-exception)]
 :bract.core/launchers       [bract.core.inducer/add-shutdown-hook
                              bract.ring.inducer/start-server]
 :bract.ring/server-starter  gossamer.core.util/start-placeholder-server
 }
